
#pragma config(Sensor, dgtl1,  rightencoder,   sensorQuadEncoder)
#pragma config(Sensor, dgtl3,  leftencoder,    sensorQuadEncoder)
#pragma config(Motor,  port1,           leftmotor,     tmotorVex393_HBridge, openLoop, reversed, driveLeft)
#pragma config(Motor,  port6,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port7,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port10,          rightmotor,    tmotorVex393_HBridge, openLoop, driveRight)
//*!!Code automatically generated by 'ROBOTC' configuration wizard     s          !!*//

task main()
{

SensorValue[rightencoder]=0;
SensorValue[leftencoder]=0;

//Straightening code
while(SensorValue[leftencoder]<2200 && SensorValue[rightencoder]<2200)
	{
		if (SensorValue[leftencoder] < SensorValue[rightencoder]) // Calculates if the right encoder is at a higher count than the left.
		{
			motor[rightmotor]=63; // Lowers right motors power level.
			motor[leftmotor]=127; // Raises left motors power level.
		}
		else if (SensorValue[leftencoder] > SensorValue[rightencoder]) // Calculates if the right encoder is at a lower count than the left.
		{
			motor[rightmotor]=127; // Raises right motors power level.
			motor[leftmotor]=63; // Lowers left motors power level.
		}
		else (SensorValue[leftencoder] == SensorValue[rightencoder]); // Calculates if the right encoder is at an equal count to the left.
		{
			motor[rightmotor]=127; // Equalizes motor speed.
			motor[leftmotor]=127; // Equalizes motor speed.
		}
	}

//Point turn (180 degree)
SensorValue[rightencoder]=-846; // Set's encoder value for turn.
SensorValue[leftencoder]=846; // Set's encoder value for turn.

while (SensorValue[rightencoder]<846 && SensorValue[leftencoder]>-846)
  {
	motor[rightmotor]=96; // Motor is set to run until it is greater than 800.
	motor[leftmotor]=-96;// Motor is set to run until it is greater than -800.
  }

SensorValue[rightencoder]=0;
SensorValue[leftencoder]=0;

//Straightening code
while(SensorValue[leftencoder]<2200 && SensorValue[rightencoder]<2200)
	{
		if (SensorValue[leftencoder] < SensorValue[rightencoder]) // Calculates if the right encoder is at a higher count than the left.
		{
			motor[rightmotor]=63; // Lowers right motors power level.
			motor[leftmotor]=127; // Raises left motors power level.
		}
		else if (SensorValue[leftencoder] > SensorValue[rightencoder]) // Calculates if the right encoder is at a lower count than the left.
		{
			motor[rightmotor]=127; // Raises right motors power level.
			motor[leftmotor]=63; // Lowers left motors power level.
		}
		else (SensorValue[leftencoder] == SensorValue[rightencoder]); // Calculates if the right encoder is at an equal count to the left.
		{
			motor[rightmotor]=127; // Equalizes motor speed.
			motor[leftmotor]=127; // Equalizes motor speed.
		}
	}

}
